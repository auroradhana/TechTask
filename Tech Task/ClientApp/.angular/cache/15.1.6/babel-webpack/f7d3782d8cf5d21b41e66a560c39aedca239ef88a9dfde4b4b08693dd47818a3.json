{"ast":null,"code":"import { Order } from '../_models/Order';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl + 'api/';\n  }\n  addOrder(order) {\n    return this.http.post(this.baseUrl + 'Orders', Order);\n  }\n  getOrders() {\n    return this.http.get(this.baseUrl + `Orders`);\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,kBAAkB;AAExC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAWH,WAAW,CAACI,OAAO,GAAG,MAAM;EAEd;EAEjCC,QAAQ,CAACC,KAAY;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,GAAG,QAAQ,EAAEL,KAAK,CAAC;EACvD;EAEOS,SAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,IAAI,CAACL,OAAO,GAAG,QAAQ,CAAC;EACxD;;AAXWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["Order","environment","OrderService","constructor","http","baseUrl","addOrder","order","post","getOrders","get","factory","providedIn"],"sourceRoot":"","sources":["D:\\Documents\\.NETProjects\\Tech Task\\Tech Task\\ClientApp\\src\\app\\_services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Order } from '../_models/Order';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private baseUrl: string = environment.baseUrl + 'api/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public addOrder(order: Order) {\r\n    return this.http.post(this.baseUrl + 'Orders', Order);\r\n  }\r\n\r\n  public getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(this.baseUrl + `Orders`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}